[package]
publish =     false
name =        "sample-egui"
description = "Sample (example), basic async code with tokio."

version =     {workspace=true}
edition =     {workspace=true}
authors =     {workspace=true}
categories  = {workspace=true}
keywords =    {workspace=true}

[lints]
workspace = true

[dependencies]
utilities = { path = "../utilities" }

async-stream =             "0.3"
futures =                  "0.3"
tokio =        { version = "1", features = ["macros","process","rt-multi-thread",]  } # "fs","io-std","io-util","macros,"net","parking_lot","process","rt","rt-multi-thread","signal","sync","time", (wasm-compatible: sync,macros,io-util,rt,time)
tokio-stream = { version = "0.1", features = [] }  # "fs","io-util","net","signal","sync","tokio-util"
tokio-util =   { version = "0.7", features = ["rt"] }  # "codec","compat","futures-io","futures-util","hashbrown","io-util","rt","slab","time","tracing"

governor = { version = "0.10", default-features = false, features = ["jitter","std","quanta",] }  # "dashmap","jitter","no_std","quanta","std"
reqwest =  { version = "0.12", features = ["json","rustls-tls",] }  # "cookies","json","rustls-tls"
url =      { version = "2" }
rfd =      "0.15"

eframe = { version = "0.32", features = ["persistence"] }  # "default_fonts","glow","persistence","wayland","wgpu" # NOTE: 'wayland' required for linux targets
egui = { version = "0.32", features = [] }  # "callstack","document-features"
egui_extras = { version = "0.32", features = [] }  # "all_loaders","datepicker","document-features","serde","syntect",
egui_table = "0.3"
egui_inbox = "0.7"

rand = { version = "0.9", features = [] }  # "log","serde","simd_support"
serde = { version = "1", features = ["derive"] }  # "derive"
serde_json = "1"

derive_more = { version = "2", features = ["full"] }  # "add","add_assign","as_ref","constructor","debug","deref","deref_mut","display","error","from","from_str","index","index_mut","into","into_iterator","is_variant","mul","mul_assign","not","sum","try_from","try_into","try_unwrap","unwrap",
indoc =                   "2"

clap =       {workspace=true}
owo-colors = {workspace=true}
thiserror =  {workspace=true}

tracing =            { workspace = true }  # "release_max_level_warn"^"release_max_level_off"
tracing-appender =   { workspace = true }
tracing-error =      { workspace = true }
tracing-subscriber = { workspace = true, features = ["env-filter"] } # "env-filter","json"

# [dev-dependencies]
