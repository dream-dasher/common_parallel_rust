# Settings for Rust Workspace
# [Cargo Manifest Configuration Reference](https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section)

# ################################# -workspace info (workspace)- ################################# #
[workspace]
members = ["crates/*", "xtask"]
resolver = "3"
# ################################# -package features (workspace)- ################################# #
[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["Ethan Skowronski-Lutz"]
keywords = []
# ################################# -lints (workspace)- ################################# #
[workspace.lints.rust]
unsafe_code = "deny"
[workspace.lints.clippy]
allow_attributes = "warn"
undocumented_unsafe_blocks = "deny"  # "forbid" lint level appears buggy
# ################################# -compile profiles (workspace)- ################################# #
[profile.release]
codegen-units = 1
lto = true        # true:= "fat"
[profile.profiling] # for perf-analysis, e.g. `samply`
inherits = "release"
debug = true
[profile.release.package.sample-egui] # for wasm deploy
opt-level = 2
[profile.release.package.sample-webapp] # for wasm deploy
# lto = true # VERY slightly smaller wasm
# opt-level = 's' # 10-20% smaller wasm compared to `opt-level = 3`
# opt-level = 1 # very slow and big wasm. Don't do this.
opt-level = 2 # fast and small wasm, basically same as `opt-level = 's'`
# opt-level = 3 # unnecessarily large wasm for no performance gain

# ################################# -user dependencies (workspace)- ################################# #
[workspace.dependencies]
## ~~~~~~~~~~~~ -async (workspace)- ~~~~~~~~~~~~ #
async-stream = "0.3"
futures = "0.3"
tokio = { version = "1", features = ["macros"]  }# "fs","io-std","io-util","net","parking_lot","process","rt","rt-multi-thread","signal","sync","time",
tokio-stream = { version = "0.1", features=[] } # "fs","io-util","net","signal","sync","tokio-util"
# tokio wasm-compatible: "sync","macros","io-util","rt","time"
### ......... -remote (workspace)- ......... #
reqwest = { version = "0.12", features = ["rustls-tls"] } # "cookies","json",
sqlx = { version = "0.8", features = ["tls-rustls"] } # "sqlite","runtime-tokio",
### ......... -accessory (workspace)- ......... #
governor = {version = "0.10", default-features = false, features = ["jitter", "std", "quanta"] } # "dashmap", "no_std"
url = { version = "2" }
## ~~~~~~~~~~~~ -diagnostics (workspace)- ~~~~~~~~~~~~ #
tracing = { version = "0.1", features = [] } # "release_max_level_warn"^"release_max_level_off"
tracing-appender = "0.2"
tracing-error = "0.2"
tracing-subscriber = { version = "0.3", features = [] } # "env-filter","json"
tracing-timing = "0.6"
## ~~~~~~~~~~~~ -env & files (workspace)- ~~~~~~~~~~~~ #
arboard = "3"
# csv = "1"
dotenvy = "0.15"
include_dir = "0.7"
rfd = "0.15"
# toml = "0.8"
# walkdir = "2"
### ......... -config (workspace)- ......... #
# config = "0.15"
# directories = "6"
### ......... -proceses (workspace)- ......... #
# rexpect = { version = "0.6", features = [] } # "which"
## ~~~~~~~~~~~~ -ergonomics (workspace)- ~~~~~~~~~~~~ #
bon = "3"
derive_more = { version = "2", features = [] } # "add","add_assign","as_ref","constructor","debug","deref","deref_mut","display","error","from","from_str","index","index_mut","into","into_iterator","is_variant","mul","mul_assign","not","sum","try_from","try_into","try_unwrap","unwrap",
indoc = "2"
# itertools = "0.14"
# nestify = "0.3"
thiserror = "2"
## ~~~~~~~~~~~~ -interface (workspace)- ~~~~~~~~~~~~ #
### ......... -cli (workspace)- ......... #
clap = { version = "4", features = ["derive"] } # "env", "string", "unicode", "wrap_help",
# dialoguer = "0.11"
owo-colors = "4"
### ......... -egui (workspace)- ......... #
eframe = { version = "0.31", default-features = false, features = ["wayland"] } # "default_fonts","glow","persistence","wayland","wgpu" # NOTE: 'wayland' required for linux targets
egui = { version = "0.31", features = [] } # "callstack","document-features"
egui_extras = { version = "0.31", features = [] } # "all_loaders","datepicker","document-features","serde","syntect",
# egui_table = "0.3"
# egui_inbox = "0.7"
## ~~~~~~~~~~~~ -math & science (workspace)- ~~~~~~~~~~~~ #
### ......... -data (workspace)- ......... #
# polars = { version = "0.45", features = [] }
### ......... -math (workspace)- ......... #
# faer = "0.21"
rand = { version = "0.9", features = [] } # "log","serde","simd_support"
## ~~~~~~~~~~~~ -parsing (workspace)- ~~~~~~~~~~~~ #
# regex = { version = "1", features = [] } # "logging"
# monostate = "0.1"                                   # serde: constraining, zero-sized type
serde = { version = "1", features = ["derive"] }
serde_json = "1"
## ~~~~~~~~~~~~ -time (workspace)- ~~~~~~~~~~~~ #
# jiff = { version = "0.1", features = [] } # "js","logging","serde"

# ################################# -dev dependencies (workspace)- ################################# #
# [dev-dependencies] <-- only goes in package Cargo.toml
## ~~~~~~~~~~~~ -benchmarking (workspace)- ~~~~~~~~~~~~ #
divan = "0.1"
## ~~~~~~~~~~~~ -test ergonomics (workspace)- ~~~~~~~~~~~~ #
pretty_assertions = "1"
test-log = { version = "0.2", features = ["trace"] }
## ~~~~~~~~~~~~ -property sample testing (workspace)- ~~~~~~~~~~~~ #
quickcheck = "1"
quickcheck_macros = "1"
## ~~~~~~~~~~~~ snapshot testing (workspace)- ~~~~~~~~~~~~ #
insta = { version = "1", features = [] } # "clap","csv","json","redactions","serde","toml","walkdir",
