# Settings for Rust Workspace
# [Cargo Manifest Configuration Reference](https://doc.rust-lang.org/stable/cargo/reference/manifest.html#the-lints-section)

[workspace]
members = ["crates/*", "xtask"]
resolver = "3"

[workspace.package]
version = "0.1.0"
edition = "2024"
authors = ["Ethan Skowronski-Lutz"]
keywords = ["scratch", "api", "pagerduty"]


[workspace.lints.rust]
unsafe_code = "forbid"
[workspace.lints.clippy]
allow_attributes = "warn"

[profile.release]
codegen-units = 1
lto = true        # true:= "fat"
[profile.profiling] # for perf-analysis, e.g. `samply`
inherits = "release"
debug = true


[workspace.dependencies]
## --Async--
futures = "0.3.31"
tokio = { version = "1.42.0", features = ["full"] }
### - Remote -
reqwest = { version = "0.12.9", features = ["blocking", "json"] }
sqlx = { version = "0.8.3", features = ["sqlite", "runtime-tokio", "tls-rustls"] }

## --Diagnostics--
tracing = { version = "0.1.41", features = [] }
#                  "release_max_level_warn"^"release_max_level_off"
tracing-appender = "0.2.3"
tracing-error = "0.2.1"
tracing-subscriber = { version = "0.3.19", features = ["env-filter", "json"] }
tracing-timing = "0.6.0"

## --Env & Files--
arboard = "3.4.1"
csv = "1.3.1"
dotenvy = "0.15.7"
include_dir = "0.7.4"
secrecy = "0.10.3"
toml = "0.8.19"
walkdir = "2.5.0"
### Config
config = "0.15.4"
directories = "5.0.1"
### System & Processes
rexpect = { version = "0.6.0", features = ["which"] }

## --Ergonomics--
bon = "3.2.0"
derive_more = { version = "1.0.0", features = ["full"] }
indoc = "2.0.5"
itertools = "0.14.0"
nestify = "0.3.3"
strum = { version = "0.26.3", features = ["derive", "phf"] }

## --Interface--
### - CLI -
clap = { version = "4.5.22", features = [
  "env",
  "cargo",
  "derive",
  "string",
  "unicode",
  "wrap_help",
] }
clap-verbosity-flag = "3.0.1"
dialoguer = "0.11.0"
owo-colors = "4.1.0"
tabled = "0.17.0"
json_to_table = "0.9"
# ### - egui -
eframe = { version = "0.30", default-features = false, features = [
    "default_fonts", # Embed the default egui fonts.
    "glow",          # Use the glow rendering backend. Alternative: "wgpu".
    "persistence",   # Enable restoring app state when restarting the app.
    "wayland",       # To support Linux (and CI)
] }
egui = { version = "0.30.0", features = ["callstack", "document-features"] }
egui_extras = { version = "0.30.0", features = [
    "datepicker",
    "document-features",
    "serde",
    "syntect",
] }
egui_table = "0.2.0"
egui_inbox = "0.7.0"

# ## --Math & Science--
# ### - Data -
# polars = { version = "0.45.1", features = [] }
# ### - Math -
faer = "0.20.2"
rand = "0.8.5"

## --Parsing--
regex = { version = "1.11.1", features = ["logging"] }
monostate = "0.1.13"  # serde: constraining, zero-sized type
serde = { version = "1.0.215", features = ["derive"] }
serde_json = "1.0.133"

## --Time--
jiff = { version = "0.1.16", features = ["js", "logging", "serde"] }

# Dev-Dependencies
##__Benchmarking__
divan = "0.1.17"
## __Test_Ergonomics__
pretty_assertions = "1.4.1"
test-log = { version = "0.2.16", features = ["trace"] }
## __Property Sample Testing__
quickcheck = "1.0.3"
quickcheck_macros = "1.0.0"
## __Snapshot Testing__
insta = { version = "1.41.1", features = [
  "clap",
  "csv",
  "json",
  "redactions",
  "serde",
  "toml",
  "walkdir",
] }
